@model FT.Web.Model.Models.AereoModel
@using System.Web.Helpers
<script src="~/Scripts/jquery/jquery.slides.min.js"></script>
<script src="~/Scripts/Aereo.js"></script>
<link href="~/Content/Home.css" rel="stylesheet" />
<link href="~/Content/Aereo.css" rel="stylesheet" />
<script>
    $(function() {
        $( document ).tooltip();
    });
</script>
<style>
    .control-cotizacao, #div-loading-cotizacao {
        margin: 10px auto auto !important;
    }

    #DivPai2 {
        float: right !important;
        margin-right: 47px !important;
        width: 699px !important;
        margin-top: -134px;
    }

    #simplemodal-container {
        padding: 0 !important;
    }

    #DivRadio2 label {
        color: #666 !important;
    }

    .simplemodal-wrap {
        overflow-x: hidden !important;
    }

    .slidesjs-control {
        height: 268.94px !important;
    }

    .slidesjs-container {
        height: 260.4px !important;
    }
</style>
<div class="content-left" style="display: block;">
    @if (Model.GrupoTarifas != null && Model.GrupoTarifas.Count > 0)
    {
        using (Ajax.BeginForm("FiltrarAereo", null, new AjaxOptions { UpdateTargetId = "conteudo", HttpMethod = "Post", OnSuccess = "conteudoShow(" + @Model.CompanhiaMatrix.Count() + ")" }, new { id = "filterAereoForm" }))
        {
        <input type="hidden" name="hdnTipoFiltro" value="@Model.Tipo" />
        <input type="hidden" id="hdnValorSelecionado" name="hdnValorSelecionado" />
        <div style="float: left; color: white; background-color: #f05c18; width: 235px; margin-left: 10px; margin-top: 10px; border-radius: 10px;">
            <div id="headerResultados1" class="clearfix" style="margin: 10px;">
                <span style="font-family: Verdana; color: white; font-size: 20px;" class="iconeMala">Filtrar</span>
            </div>
            <div style="margin: 2px; height: auto; padding-bottom: 30px; background-color: #eeeeee; border-radius: 10px;">
                <div style="margin-left: 4px;">
                    <br />
                    <div>
                        <label class="labelbuscadorFiltro">Faixa de preço</label>
                        <script>
                            $(function () {
                                $("#slider-range").slider({
                                    range: true,
                                    change: function (event, ui) { Filtrar(this); },
                                    min: @FTV.Conv.ToInt32(Model.GrupoTarifas.Min(p => p.Valor)),
                                    max: @FTV.Conv.ToInt32(Model.GrupoTarifas.Max(p => p.Valor)),
                                    values: [@FTV.Conv.ToInt32(Model.GrupoTarifas.Min(p => p.Valor)), @FTV.Conv.ToInt32(Model.GrupoTarifas.Max(p => p.Valor))],
                                    slide: function (event, ui) {
                                        $("#amount").val("R$" + ui.values[0] + " - R$" + ui.values[1]);
                                    }
                                });
                                $("#amount").val("R$" + $("#slider-range").slider("values", 0) +
                                " - R$" + $("#slider-range").slider("values", 1));
                            });
                        </script>
                        <div class="preco">
                            <p>
                                <input type="text" id="amount" name="amount" class="inputFiltro" style="color: #f6931f; font-weight: bold;" />
                            </p>
                            <div id="slider-range"></div>
                        </div>
                    </div>
                    <br>
                    <div id="DivRadio2">
                        <div>
                            @if (Model.Tipo == "IdaeVolta" || Model.Tipo == "SomenteIda")
                            {
                                <label class="labelbuscadorFiltro">Horário Ida</label>
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.First()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 0 && x.Trecho.DataOrigem.Hour < 6)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaMadrugada' name="HorarioIdaMadrugada" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Madrugada</label>
                                    <label class="labelbuscadorHoras">12am - 6am</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.First()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 6 && x.Trecho.DataOrigem.Hour < 12)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaManha' name="HorarioIdaManha" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Manha</label>
                                    <label class="labelbuscadorHoras">6am - 12pm</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.First()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 12 && x.Trecho.DataOrigem.Hour < 18)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaTarde' name="HorarioIdaTarde" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Tarde</label>
                                    <label class="labelbuscadorHoras">12pm - 6pm</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.First()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 18 && x.Trecho.DataOrigem.Hour < 23)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaNoite' name="HorarioIdaNoite" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Noite</label>
                                    <label class="labelbuscadorHoras">6pm - 12am</label>
                                    <br />
                                </div>
                                }
                                <br />
                            }
                            else
                            {
                                <label class="labelbuscadorFiltro">Horário Ida</label>
                                if (Model.GrupoTarifas.SelectMany(p => p.GrupoTarifaTrechos).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 0 && x.Trecho.DataOrigem.Hour < 6)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaMadrugada' name="HorarioIdaMadrugada" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Madrugada</label>
                                    <label class="labelbuscadorHoras">12am - 6am</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.SelectMany(p => p.GrupoTarifaTrechos).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 6 && x.Trecho.DataOrigem.Hour < 12)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaManha' name="HorarioIdaManha" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Manha</label>
                                    <label class="labelbuscadorHoras">6am - 12pm</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.SelectMany(p => p.GrupoTarifaTrechos).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 12 && x.Trecho.DataOrigem.Hour < 18)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaTarde' name="HorarioIdaTarde" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Tarde</label>
                                    <label class="labelbuscadorHoras">12pm - 6pm</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.SelectMany(p => p.GrupoTarifaTrechos).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 18 && x.Trecho.DataOrigem.Hour < 23)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioIdaNoite' name="HorarioIdaNoite" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Noite</label>
                                    <label class="labelbuscadorHoras">6pm - 12am</label>
                                    <br />
                                </div>
                                }
                                <br />
                            }
                            @if (Model.Tipo == "IdaeVolta")
                            {
                                <label class="labelbuscadorFiltro">Horário Volta</label>
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.Last()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 0 && x.Trecho.DataOrigem.Hour < 6)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioVoltaMadrugada' name="HorarioVoltaMadrugada" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Madrugada</label>
                                    <label class="labelbuscadorHoras">12am - 6am</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.Last()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 6 && x.Trecho.DataOrigem.Hour < 12)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioVoltaManha' name="HorarioVoltaManha" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Manha</label>
                                    <label class="labelbuscadorHoras">6am - 12pm</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.Last()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 12 && x.Trecho.DataOrigem.Hour < 18)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioVoltaTarde' name="HorarioVoltaTarde" onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Tarde</label>
                                    <label class="labelbuscadorHoras">12pm - 6pm</label>
                                    <br />
                                </div>
                                }
                                if (Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.Last()).Any(p => p.TrechosTarifaCodigo.Any(x => x.Trecho.DataOrigem.Hour >= 18 && x.Trecho.DataOrigem.Hour < 23)))
                                {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='HorarioVoltaNoite' name='HorarioVoltaNoite' onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Noite</label>
                                    <label class="labelbuscadorHoras">6pm - 12am</label>
                                    <br />
                                </div>
                                }
                            }
                        </div>
                        <br />
                        <div>
                            <label class="labelbuscadorFiltro">Escala</label>
                            @if (Model.MenorPrecoDireto.ToString("n2") != "0,00")
                            {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='EscalaVooDireto' name='EscalaVooDireto' onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">Voo Direto</label><label class="labelbuscadorHoras">R$ @Model.MenorPrecoDireto.ToString("n2")</label>
                                    <br />
                                </div>
                            }
                            @if (Model.MenorPrecoUmaParada.ToString("n2") != "0,00")
                            {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='EscalaUmaParada' name='EscalaUmaParada' onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">1 Parada</label><label class="labelbuscadorHoras">R$ @Model.MenorPrecoUmaParada.ToString("n2")</label>
                                    <br />
                                </div>
                            }
                            @if (Model.MenorPrecoDuasParadas.ToString("n2") != "0,00")
                            {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='EscalaDuasParadas' name='EscalaDuasParadas' onclick="Filtrar(this);" checked="checked" class="opcoes">
                                    <label for="ck_facilidade01">2+ Paradas</label><label class="labelbuscadorHoras">R$ @Model.MenorPrecoDuasParadas.ToString("n2")</label>
                                    <br />
                                </div>
                            }
                        </div>
                        <br />
                        <div>
                            <label class="labelbuscadorFiltro">Companhias</label>
                            @foreach (var matrix in Model.CompanhiaMatrix)
                            {
                                <div class="listaFiltro">
                                    <input type='checkbox' id='Companhias-@matrix.Nome.Trim()' name='Companhias-@matrix.Nome.Trim()' onclick="Filtrar(this);" checked="checked" class="opcoes"  >
                                    <label for="ck_facilidade01" style="color: #FFF; margin-right: -10px;">-</label>
                                    <img src="@matrix.UrlCia" style="height: 15px; width: 30px;"/>
                                    <label class="labelbuscador">@matrix.Nome</label>
                                    <label class="labelbuscadorHoras">R$ @matrix.Celulas.Where(p => p.Preco > 0).Min(p => p.Preco).ToString("n2")</label>
                                    <br />
                                </div>  
                            }
                        </div>
                        <br />
                        @if (Model.Tipo == "IdaeVolta" || Model.Tipo == "SomenteIda")
                        {
                            <div>
                                <label class="labelbuscadorFiltro">Aeroporto de Partida</label>
                                @foreach (var item in Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.First()).SelectMany(p => p.TrechosTarifaCodigo).GroupBy(P => P.Trecho.SiglaAeroportoOrigem))
                                {
                                    var title = @Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.First()).SelectMany(p => p.TrechosTarifaCodigo).First(p => p.Trecho.SiglaAeroportoOrigem == item.Key).Trecho;
                                    <div id="aeroporto" class="listaFiltro">
                                        <input type='checkbox' id='AeroportoPartida-@item.Key' title="@title.NomeAeroportoOrigem" name='AeroportoPartida-@item.Key' onclick="Filtrar(this);" checked="checked" class="opcoes"  >
                                        <label title="@title.NomeAeroportoOrigem" for="ck_facilidade01">@item.Key - @title.NomeCidadeOrigem</label>
                                        <br />
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div>
                                <label class="labelbuscadorFiltro">Aeroportos</label>
                                @foreach (var item in Model.GrupoTarifas.SelectMany(p => p.GrupoTarifaTrechos).SelectMany(p => p.TrechosTarifaCodigo).GroupBy(P => P.Trecho.SiglaAeroportoOrigem))
                                {
                                    var title = @Model.GrupoTarifas.SelectMany(p => p.GrupoTarifaTrechos).SelectMany(p => p.TrechosTarifaCodigo).First(p => p.Trecho.SiglaAeroportoOrigem == item.Key).Trecho;
                                    <div id="aeroporto" class="listaFiltro">
                                        <input type='checkbox' id='AeroportoPartida-@item.Key' title="@title.NomeAeroportoOrigem" name='AeroportoPartida-@item.Key' onclick="Filtrar(this);" checked="checked" class="opcoes"  >
                                        <label title="@title.NomeAeroportoOrigem" for="ck_facilidade01">@item.Key - @title.NomeCidadeOrigem</label>
                                        <br />
                                    </div>
                                }
                            </div>
                        }
                        <br />
                        @if (Model.Tipo == "IdaeVolta")
                        {
                            <div>
                                <label class="labelbuscadorFiltro">Aeroporto de Destino</label>
                                @foreach (var item in Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.Last()).SelectMany(p => p.TrechosTarifaCodigo).GroupBy(P => P.Trecho.SiglaAeroportoOrigem))
                                {
                                    var title = @Model.GrupoTarifas.Select(p => p.GrupoTarifaTrechos.Last()).SelectMany(p => p.TrechosTarifaCodigo).First(p => p.Trecho.SiglaAeroportoOrigem == item.Key).Trecho;
                                    <div id="aeroporto" class="listaFiltro">
                                        <input type='checkbox' id='AeroportoDestino-@item.Key' title="@title.NomeAeroportoOrigem" name='AeroportoDestino-@item.Key' onclick="Filtrar(this);" checked="checked" class="opcoes"  >
                                        <label title="@title.NomeAeroportoOrigem" for="ck_facilidade01">@item.Key - @title.NomeCidadeOrigem</label>
                                        <br />
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <input type="hidden" id="hdnCombo" name="hdnCombo" />
        <input type="hidden" id="hdnIsMontePacote" name="hdnIsMontePacote" />
        }
    }
</div>
